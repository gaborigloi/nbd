(* -*- tuareg -*- *)
#require "unix"

let flags = function
| [] -> ""
| pkgs -> 
  let cmd = "ocamlfind ocamlc -verbose" ^ (
    List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
  ) in
  let ic = Unix.open_process_in
    (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\\w+)'")
  in
  let rec go ic acc =
    try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
  in
  go ic ""

let coverage_rewriter ~full =
  let is_coverage = try Unix.getenv "BISECT_ENABLE" = "YES" with Not_found -> false in
  match is_coverage, full with
  | true, true -> "(preprocess (pps (bisect_ppx -conditional)))"
  | true, _    -> "bisect_ppx -conditional"
  | _          -> ""

let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(library
 ((name nbd_lwt_unix)
  (public_name nbd.lwt)
  (flags (:standard -w -34-32 %s))
  (libraries
   (cstruct.lwt
    io-page
    io-page.unix
    ssl
    lwt
    lwt.unix
    lwt.ssl
    mirage-block-unix
    mirage-types.lwt
    nbd))
  %s
  ))
|} (flags ["lwt.ppx"]) (coverage_rewriter ~full:true)
